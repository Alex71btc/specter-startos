- rule: '''users.*.name = "specter-desktop"'
  description: 'Must have an RPC user named "specter-desktop"'
  suggestions:
    - PUSH:
        to: "users"
        value:
          name: specter-desktop
          allowed-calls: []
          fetch-blocks: false
    - SET:
        var: 'users.[first(item => ''item.name = "specter-desktop")].password'
        to-entropy:
          charset: "a-z,A-Z,0-9"
          len: 22
- rule: '''users.[first(item => ''item.name = "specter-desktop")].allowed-calls.* = "getindexinfo"'
  description: 'RPC user "specter-desktop" must have "getindexinfo" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter-desktop")].allowed-calls'
        value: "getindexinfo"
- rule: '''users.[first(item => ''item.name = "specter-desktop")].allowed-calls.* = "getblockcount"'
  description: 'RPC user "specter-desktop" must have "getblockcount" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter-desktop")].allowed-calls'
        value: "getblockcount"
- rule: '''users.[first(item => ''item.name = "specter-desktop")].allowed-calls.* = "getchaintips"'
  description: 'RPC user "specter-desktop" must have "getchaintips" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter-desktop")].allowed-calls'
        value: "getchaintips"
- rule: '''users.[first(item => ''item.name = "specter-desktop")].allowed-calls.* = "getmempoolinfo"'
  description: 'RPC user "specter-desktop" must have "getmempoolinfo" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter-desktop")].allowed-calls'
        value: "getmempoolinfo"
- rule: '''users.[first(item => ''item.name = "specter-desktop")].allowed-calls.* = "getblockchaininfo"'
  description: 'RPC user "specter-desktop" must have "getblockchaininfo" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter-desktop")].allowed-calls'
        value: "getblockchaininfo"
- rule: '''users.[first(item => ''item.name = "specter-desktop")].allowed-calls.* = "getblockhash"'
  description: 'RPC user "specter-desktop" must have "getblockhash" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter-desktop")].allowed-calls'
        value: "getblockhash"
- rule: '''users.[first(item => ''item.name = "specter-desktop")].allowed-calls.* = "getblock"'
  description: 'RPC user "specter-desktop" must have "getblock" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter-desktop")].allowed-calls'
        value: "getblock"
- rule: '''users.[first(item => ''item.name = "specter-desktop")].allowed-calls.* = "getmempoolentry"'
  description: 'RPC user "specter-desktop" must have "getmempoolentry" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter-desktop")].allowed-calls'
        value: "getmempoolentry"
- rule: '''users.[first(item => ''item.name = "specter-desktop")].allowed-calls.* = "getrawtransaction"'
  description: 'RPC user "specter-desktop" must have "getrawtransaction" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter-desktop")].allowed-calls'
        value: "getrawtransaction"
- rule: '''users.[first(item => ''item.name = "specter-desktop")].allowed-calls.* = "getrawmempool"'
  description: 'RPC user "specter-desktop" must have "getrawmempool" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter-desktop")].allowed-calls'
        value: "getrawmempool"
- rule: '''users.[first(item => ''item.name = "specter-desktop")].allowed-calls.* = "gettxout"'
  description: 'RPC user "specter-desktop" must have "gettxout" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter-desktop")].allowed-calls'
        value: "gettxout"
- rule: '''users.[first(item => ''item.name = "specter-desktop")].allowed-calls.* = "validateaddress"'
  description: 'RPC user "specter-desktop" must have "validateaddress" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter-desktop")].allowed-calls'
        value: "validateaddress"
- rule: '''users.[first(item => ''item.name = "specter-desktop")].allowed-calls.* = "estimatesmartfee"'
  description: 'RPC user "specter-desktop" must have "estimatesmartfee" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter-desktop")].allowed-calls'
        value: "estimatesmartfee"
- rule: '''users.[first(item => ''item.name = "specter-desktop")].allowed-calls.* = "getbestblockhash"'
  description: 'RPC user "specter-desktop" must have "getbestblockhash" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter-desktop")].allowed-calls'
        value: "getbestblockhash"
- rule: '''users.[first(item => ''item.name = "specter-desktop")].allowed-calls.* = "getblockheader"'
  description: 'RPC user "specter-desktop" must have "getblockheader" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter-desktop")].allowed-calls'
        value: "getblockheader"
- rule: '''users.[first(item => ''item.name = "specter-desktop")].allowed-calls.* = "getinfo"'
  description: 'RPC user "specter-desktop" must have "getinfo" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter-desktop")].allowed-calls'
        value: "getinfo"
- rule: '''users.[first(item => ''item.name = "specter-desktop")].allowed-calls.* = "getmempoolinfo"'
  description: 'RPC user "specter-desktop" must have "getmempoolinfo" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter-desktop")].allowed-calls'
        value: "getmempoolinfo"
- rule: '''users.[first(item => ''item.name = "specter-desktop")].allowed-calls.* = "getnetworkinfo"'
  description: 'RPC user "specter-desktop" must have "getnetworkinfo" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter-desktop")].allowed-calls'
        value: "getnetworkinfo"
- rule: '''users.[first(item => ''item.name = "specter-desktop")].allowed-calls.* = "getpeerinfo"'
  description: 'RPC user "specter-desktop" must have "getpeerinfo" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter-desktop")].allowed-calls'
        value: "getpeerinfo"
- rule: '''users.[first(item => ''item.name = "specter-desktop")].allowed-calls.* = "getrawtransaction"'
  description: 'RPC user "specter-desktop" must have "getrawtransaction" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter-desktop")].allowed-calls'
        value: "getrawtransaction"
- rule: '''users.[first(item => ''item.name = "specter-desktop")].allowed-calls.* = "sendrawtransaction"'
  description: 'RPC user "specter-desktop" must have "sendrawtransaction" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter-desktop")].allowed-calls'
        value: "sendrawtransaction"
- rule: '''users.[first(item => ''item.name = "specter-desktop")].allowed-calls.* = "uptime"'
  description: 'RPC user "specter-desktop" must have "uptime" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter-desktop")].allowed-calls'
        value: "uptime"
- rule: '''users.[first(item => ''item.name = "specter-desktop")].allowed-calls.* = "scantxoutset"'
  description: 'RPC user "specter-desktop" must have "scantxoutset" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter-desktop")].allowed-calls'
        value: "scantxoutset"
- rule: '''users.[first(item => ''item.name = "specter-desktop")].allowed-calls.* = "listwallets"'
  description: 'RPC user "specter-desktop" must have "listwallets" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter-desktop")].allowed-calls'
        value: "listwallets"
- rule: '''users.[first(item => ''item.name = "specter-desktop")].allowed-calls.* = "getblockfilter"'
  description: 'RPC user "specter-desktop" must have "getblockfilter" enabled'
  suggestions:
    - PUSH:
        to: 'users.[first(item => ''item.name = "specter-desktop")].allowed-calls'
        value: "getblockfilter"
